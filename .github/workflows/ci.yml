name: CI

on: [push, pull_request]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack
        ports:
          - 4567-4597:4567-4597
        env:
          SERVICES: apigateway,lambda,dynamodb,sns
          DEFAULT_REGION: eu-central-1
          DOCKER_HOST: unix:///var/run/docker.sock
          LAMBDA_EXECUTOR: docker
          START_WEB: 0
        options: >-
          --volume /var/run/docker.sock:/var/run/docker.sock
          --health-cmd "awslocal sns list-topics"
          --health-interval 10s
          --health-timeout 5s
          --health-start-period 15s
          --health-retries 5
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run integration tests
        timeout-minutes: 15
        run: |
          yarn build
          yarn test:integration
        env:
          HOST: 172.17.0.1
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Check source code
        run: |
          yarn lint
          yarn copy:paste:detector
      - name: Compile source code
        run: |
          yarn compile
          yarn build
      - name: Run unit tests
        run: yarn test:unit:coverage
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: target/coverage/clover.xml
      - name: Deploy to Amazon Web Services
        if: github.ref == 'refs/heads/master'
        run: yarn cdk deploy --ci --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          GITLAB_SECRET_TOKEN: ${{ secrets.GITLAB_SECRET_TOKEN }}
          IFTTT_BASE_URL: ${{ secrets.IFTTT_BASE_URL }}
          IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
